load(
    "//build/kernel/kleaf:kernel.bzl",
    "ddk_module",
    "kernel_build",
)
load(":kleaf_test.bzl", "kleaf_test")

kernel_build(
    name = "test_kernel",
    srcs = [
        "//common:kernel_x86_64_sources",
    ],
    outs = ["fake.dtb"],
    arch = "x86_64",
    base_kernel = "//common:kernel_x86_64",
    build_config = "build.config.kleaf_test",
    defconfig_fragments = [
        "kleaf_test.fragment",
    ],
    dtstree = "//common-modules/virtual-device/kleaf_test/dts",
    kconfig_ext = "Kconfig.ext",
    make_goals = [
        "modules",
        "dtbs",
    ],
    module_outs = [],
    visibility = [":__subpackages__"],
)

# Tests on Kleaf functionality using virtual device as a baseline.
kleaf_test(
    name = "kleaf_test",
    extras = [
        "//common-modules/virtual-device/kleaf_test/mixed_dep_test",
    ],
    kernel_build = ":test_kernel",
)

# Test that this fails when the check is in place.
# Build: tools/bazel build //common-modules/virtual-device/kleaf_test:use_trace_printk
# Examine: readelf -t bazel-bin/common-modules/virtual-device/kleaf_test/use_trace_printk/use_trace_printk.ko | grep "trace_printk"
ddk_module(
    name = "use_trace_printk",
    srcs = ["use_trace_printk.c"],
    out = "use_trace_printk.ko",
    kernel_build = ":test_kernel",
)
