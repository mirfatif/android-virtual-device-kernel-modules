{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4ec42e22_16ed64da",
        "filename": "virtio_dxgkrnl/dxgadapter.c",
        "patchSetId": 1
      },
      "lineNbr": 902,
      "author": {
        "id": 1576895
      },
      "writtenOn": "2024-11-22T21:07:41Z",
      "side": 1,
      "message": "Need to hold the write lock for `alloc-\u003elock`.",
      "revId": "917f67ad64134a5458da09307b6f2dc2aadfdeeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d80eb27c_f86760b1",
        "filename": "virtio_dxgkrnl/dxgkrnl.h",
        "patchSetId": 1
      },
      "lineNbr": 732,
      "author": {
        "id": 1576895
      },
      "writtenOn": "2024-11-22T21:07:41Z",
      "side": 1,
      "message": "I think we should be explicit that we should hold the lock whenever we access the `cpu_address_refcount`, `cpu_address`, and the `cpu_address_mapped` fields.\n\n`cpu_address_mapped` is a bitfield. I am actually not sure if we should also obtain the lock when we access other bit fields that share the same byte/2-byte/4-byte/8-byte.",
      "revId": "917f67ad64134a5458da09307b6f2dc2aadfdeeb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}