{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2e8d0eb5_c93c1df5",
        "filename": "BUILD.bazel",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-11-30T16:32:26Z",
      "side": 1,
      "message": "Thinking about this a little longer, it feels like this is actually a fragment config applied on top of a base build.\n\nCan we 1) use the base build config 2) apply the configuration to kconfig 3) run just the target to build the scripts distribution 4) grab that and provide it as a separate artifact? Perhaps this is //common:kernel_aarch64_gdb_scripts, maybe?",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 241,
        "endChar": 1
      },
      "revId": "f11e043f49749167c008c98b2872f314b0e999b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "decbedb6_671ca93f",
        "filename": "BUILD.bazel",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-12-01T06:57:17Z",
      "side": 1,
      "message": "The fragment config is an implementation detail to CF\u0027s kgdb build. By that I mean, perhaps for a different device, to enable --kgdb, adding a fragment config might not be enough.\n\nMaybe you are suggesting that, instead of using PRE_DEFCONFIG_CMDS / POST_DEFCONFIG_CMDS in build configs, we should express fragment configs in `BUILD` files directly? I think that\u0027s a problem orthogonal to the implementation of --kgdb (tracked in b/236012223).",
      "parentUuid": "2e8d0eb5_c93c1df5",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 241,
        "endChar": 1
      },
      "revId": "f11e043f49749167c008c98b2872f314b0e999b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11353cdb_f66bb6ae",
        "filename": "BUILD.bazel",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-12-01T13:50:49Z",
      "side": 1,
      "message": "I think what I am actually challenging is whether there is a difference between the gdb scripts produced by virtual_device_x86_64_kgdb vs kernel_x86_64_kgdb.\n\nAnd further, even though the configuration changes, why is this having to define a different kernel build? Why can we not use the approach of --lto\u003d... to adjust the config and let the presence of the flag determine whether additional artifacts are part of the kernel_build outs? I seem to miss something, but I would expect that we do not need to add anything in the kernel trees to enable --kgdb. Similarly, we do not need additional definitions for --lto\u003dthin ..",
      "parentUuid": "decbedb6_671ca93f",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 241,
        "endChar": 1
      },
      "revId": "f11e043f49749167c008c98b2872f314b0e999b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01d21629_0c8224d6",
        "filename": "BUILD.bazel",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-12-01T20:19:16Z",
      "side": 1,
      "message": "The reason is that (and I might be wrong here) the \"magic\" to enable kgdb is device specific. For virtual device, it is specified in build.config.virtual_device_kgdb.x86_64. But it can be different on other devices. Hence, I can\u0027t encode those magic in `build/kernel`, but only in `common-modules/virtual-device`.\n\nIs my understanding correct that this \"magic\" is device-specific? This is described in https://android-review.git.corp.google.com/c/kernel/build/+/2315767/5/kleaf/docs/kgdb.md",
      "parentUuid": "11353cdb_f66bb6ae",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 241,
        "endChar": 1
      },
      "revId": "f11e043f49749167c008c98b2872f314b0e999b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60cc4259_5d542845",
        "filename": "BUILD.bazel",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2022-12-06T19:23:28Z",
      "side": 1,
      "message": "I think Matthias is right that there is no difference between the CF target gdbscripts and the core kernel gdbscripts. So, perhaps we can enable those in a core target. That option is CONFIG_GDB_SCRIPTS, and it has no other side effects.\n\nHowever, for the kernel+modules build itself, there are various build-time options that have to be enabled for GDB, such as disabling CONFIG_RANDOMIZE_BASE, CONFIG_STRICT_KERNEL_RWX, CONFIG_WATCHDOG, and for kdb specifically, enabling CONFIG_KGDB_KDB and CONFIG_VT. There is also a low-level option for x86 that must be enabled, CONFIG_KGDB_LOW_LEVEL_TRAP.",
      "parentUuid": "01d21629_0c8224d6",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 241,
        "endChar": 1
      },
      "revId": "f11e043f49749167c008c98b2872f314b0e999b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}